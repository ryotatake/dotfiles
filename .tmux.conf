# prefixキーをC-Spaceに変更する
set -g prefix C-Space
# C-Space*2でtmux内のプログラムにC-Spaceを送る
bind C-Space send-prefix

# C-bのキーバインドを解除する
unbind C-b

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# | でペインを縦に分割する
bind v split-window -h

# - でペインを横に分割する
bind s split-window -v

# viのキーバインドでコピーモードを使用する
set-window-option -g mode-keys vi

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# Vimのキーバインドでwindowを移動する
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# マウス操作を有効にする
setw -g mouse on

# 256色端末を使用する
set -g default-terminal "screen-256color"

# ----------------------------------
#  ステータスバー
# ----------------------------------

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
## 右パネルを設定する
set -g status-right "#[fg=cyan][%Y-%m-%d(%a) %H:%M]"
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
## ステータスバーを上部に表示する
set -g status-position top

# ----------------------------------
#  copy
# ----------------------------------

# Linuxでもtmuxのコピーを使えるようにする
if-shell "which xclip" {
  set -g copy-command 'xclip'
}

# 選択開始: v
bind -Tcopy-mode-vi v send -X begin-selection

# 行選択: V
bind -Tcopy-mode-vi V send -X select-line

# 矩形選択: C-v
bind -Tcopy-mode-vi C-v send -X rectangle-toggle

# ヤンク: y
bind -Tcopy-mode-vi y send -X copy-selection

# 行ヤンク: Y
bind -Tcopy-mode-vi Y send -X copy-line

# ----------------------------------
# tmux powerline
# ----------------------------------

# https://qiita.com/tkhr/items/8cc17c02dea1803be9c6
run-shell "powerline-daemon -q"
if-shell "test -f /proc/sys/fs/binfmt_misc/WSLInterop" {
  source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
}
if-shell "uname | grep -q Darwin" {
  source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
}
if-shell "[ -e /usr/share/powerline/bindings/tmux/powerline.conf ]" {
  source /usr/share/powerline/bindings/tmux/powerline.conf
}
set -g terminal-overrides 'xterm:colors=256'
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90
#set-option -g status-left "#(~/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/tmux-powerline/powerline.sh right)"

# plugins
if-shell "[ ! -d ~/.tmux/plugins/tpm ]" {
  run-shell 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'
}
# "prefix + I" to fetch plugins
set -g @tpm_plugins ' \
  tmux-plugins/tpm \
  tmux-plugins/tmux-sensible \
  tmux-plugins/tmux-resurrect \
  tmux-plugins/tmux-continuum \
'
# --------------------------------------------------------
# Plugins Usage
#
# tmux-plugins/tpm
#   * prefix + I = fetch plugins
#   * prefix + U = update plugins
#
# tmux-plugins/tmux-sensible
#   * see https://github.com/tmux-plugins/tmux-sensible
#
# tmux-plugins/tmux-resurrect
#   * prefix + Ctrl-s = save environment
#   * prefix + Ctrl-r = restore environment
# --------------------------------------------------------

run '~/.tmux/plugins/tpm/tpm'

set -g @continuum-restore 'on'
