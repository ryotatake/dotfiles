[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'
hook_post_source = '''
  " lexima.vimはInsertEnterのタイミングでマッピングを上書きするため、自分の設定で上書きしたい場合はそれより後に行う。
  " lexima.vimがマッピングを上書きするのを待ってから上書くため、timerを利用する。
  call timer_start(100, { -> my_settings#mappings#define_cr_for_insert_mode() })
'''

[[plugins]]
repo = 'sillybun/vim-repl'
on_cmd = ['REPLToggle']
hook_add = '''
  let g:sendtorepl_invoke_key = "!"
  let g:repl_console_name = 'REPL'
  let g:repl_program = {
    \ 'scheme': 'scheme',
    \ 'ruby': 'irb',
    \ 'default': 'fish',
  \}
  let g:repl_exit_commands = {
    \ 'scheme': '(quit)',
    \ 'ruby': 'exit',
    \ 'fish': 'exit',
  \}
'''

[[plugins]]
# .local.vimrcでg:dbにDBのURLを登録すると`DB`コマンドにURLを渡さなくてよくなる
repo = 'tpope/vim-dadbod'
on_cmd = ['DB']

[[plugins]]
repo     = 'Shougo/denite.nvim'
if       = '''has('python3')'''
depends  = ['nvim-yarp', 'vim-hug-neovim-rpc']
on_cmd   = ['Denite']
hook_post_source = '''
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d
    \ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
  endfunction

  " Add custom menus
  let s:menus = {}

  let s:menus.my_commands = {
    \ 'description': 'My commands'
    \ }
  let s:menus.my_commands.command_candidates = [
    \ ['Delete Blank Lines', 'v/./d'],
    \ ['Toggle REPL', 'REPLToggle'],
    \ ['Toggle paste', 'set invpaste'],
    \ ['Update Vim Plugins', 'call dein#update()'],
    \ ]

  call denite#custom#var('menu', 'menus', s:menus)
'''
